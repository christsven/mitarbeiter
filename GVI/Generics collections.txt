
	SUD LS05 static, Exceptopns und Datenstrukturen
	
	Aufgabe 8
	
		1.	Warum sind Generics gut?
		
		2.	Wann benötigt man grundsätzlich Listen?
				Zugriff auf bestimmte Stellen mit numerischem index
		
		3.	Wann benötigt man grundsätzlich Sets?
				Wenn Sortierung kein Problem ist, sondern Einzigartigkeit
			
		4.	Wann benötigt man grundsätzlich Maps?
				Wenn man Objektpaare verwalten möchte
		
		5.	Welchen Container wählt man, wenn man schnell auf bestimmte Positionen zugreifen will?
				Map
				
		6.	Welchen Container wählt man, wenn man häufig in der Mitte Löschen und Einfügen muss?
				Liste
			
		7.	Welchen Container wählt man, wenn man eine Sortierung und Eindeutigkeit benötigt?
				SortedSet


		8.	Welchen Container wählt man, wenn man Eindeutigkeit und einen schnellen Zugriff benötigt?
				Set

	
	Aufgabe 9
	
			Abteilungen verwalten die Mitarbeiter immer sortiert nach Namen. 
			Eine doppelte Zuordnung ist verboten. Sortiertes Einfügen soll automatisch erfolgen. 
			Die Mitarbeiter müssen aber nicht nachträglich anders sortiert werden können. 
			
				TreeSet
				
					-> Name ist eindeutig
					-> Einfache Suche per Nachname
					-> Map mit Nachname als Key schließt mehrere Menschen mit gleichem Nachnamen aus
			
			Die Mitarbeiterverwaltung soll Mitarbeiter nach Namen und Einkommen sortieren können. 
			Durch die ständige Umsortierung sind viele Zugriffe notwendig. 
			
				HashMap
				
					-> Schneller als TreeMap da unsortiert
					-> Name als Key eindeutig, Value nicht eindeutig
					-> Beide Sets können ausgegeben werden
			
			Fuhrpark soll nach Auslastung sortieren können. Auslastung ändert sich laufend. 
		
				
				
			Die Anzahl der eingesetzten Schichtarbeiter unterliegt starken Schwankungen. 
			Der Container für Schichtarbeiter sollte also bezüglich der Anzahl der verwalteten 
			Elemente effizient vergrößert und verkleinert werden können. Außerdem soll nach 
			gearbeiteten Stunden sortiert werden können
		
			Die Lagerverwaltung (zukünftige Erweiterung) soll sehr schnell beim Zugriff sein 
			und auf jeden Fall vermeiden, dass Güter doppelt eingefügt werden. Eine Sortierung 
			ist nicht erforderlich. 
