Klassendiagramm Polygone

Getter und Setter nicht dargestellt

	*************************************************************************
	* static Calculator														*	//static class für alle berechnungen
	*************************************************************************
	*																		*
	*************************************************************************
	* + calculateTriangleArea(Point a, Point b, Point c): double			*
	* + calcInnerCircle(Kreis circle): double								*
	* + calcOuterCircle(Kreis circle): double								*
	*************************************************************************
	
	*********************
	* enum ObjectType	*	//enumset mit allen möglichen Darstellungstypen. Bspw Schrank, Wand, Tisch, etc...
	*********************
	*					*
	*********************
	*					*
	*********************
	
	*****************************
	* abstract Shape			*	
	*****************************
	* - id: string				*
	* - type: ObjectType		*
	* - center: Point			*
	* - area: double			*
	*****************************
	* + move(Point): void		*
	*****************************

	*****************
	* Point			*
	*****************
	* - id: UUID	*
	* - x: double	*
	* - y: double	*
	*****************
	*				*
	*****************
	
	*****************************************
	* abstract Polygon extends Shape		*	//Beide Polygontypen haben schnittmengen, aber da der irregular keinen innenkreis hat, kann es nicht davon erben, und das regularpolygon kann nicht erben, da die add/remove/Corner keinen sinn macht.
	*****************************************
	* - Points: k,v-Map<int, Point>			*
	*****************************************
	*										*
	*****************************************
	
	*****************************************
	* IrregularPolygon extends Polygon		*
	*****************************************
	*****************************************
	* + addCorner(Point): void				*
	* + removeCorner(id: UUID): void		*
	* + removeCorner(Point: int): void		*
	***************************************** 
	* - setArea(): void						*	//wird bei jeder Mapänderung aufgerufen!
	*****************************************
	
	*****************************************
	* RegularPolygon extends Polygon		*
	*****************************************
	* - lengthSides: double					*
	* - innerCircle: Circle					*
	* - outerCircle: Circle					*
	*****************************************
	* + addCorner(): void					*
	* + removeCorner(): void				*
	* - validateAndUpdatePoints(): k,v-Map	*  //ein Punkt muss an einer Position sein, die zu der Länge aller seiten passt, daher wird jedes mal die map korrigiert
	* - updateCircle(): void				*  //wird gemeinsam mit validateAndUpdatePoints() aufgerufen
	*****************************************
	
	
	*****************************************
	* Circle extends Shape					*
	*****************************************
	* - radius: double						*	
	* - circumference: double				*
	*****************************************
	*										*
	*****************************************